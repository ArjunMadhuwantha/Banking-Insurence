// <auto-generated />
using System;
using Bank_Insurance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank_Insurance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240322094942_updateuserfull")]
    partial class updateuserfull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Bank_Insuarance.Models.BankingInsuarance", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("PolicyNo");

                    b.HasIndex("InsuranceId");

                    b.ToTable("BankingInsuarances");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BankingInsuaranceCompenstaion", b =>
                {
                    b.Property<int>("BankingInsuaranceCompenstaionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BankingInsuaranceCompenstaionID"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("BankingInsuaranceCompenstaionID");

                    b.HasIndex("PolicyNo");

                    b.ToTable("BankingInsuaranceCompenstaions");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BankingInsuaranceData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DataId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("BankingInsuaranceDatas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Branch", b =>
                {
                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Branch_name")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("TpNo")
                        .HasColumnType("longtext");

                    b.Property<string>("ZoneId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("BranchId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BuildiingInsuranceCompenstaion", b =>
                {
                    b.Property<int>("BuildiingInsuranceCompenstaionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BuildiingInsuranceCompenstaionID"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("BuildiingInsuranceCompenstaionID");

                    b.HasIndex("PolicyNo");

                    b.ToTable("BuildiingInsuranceCompenstaions");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BuildingInsuarance", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("PolicyNo");

                    b.HasIndex("InsuranceId");

                    b.ToTable("BuildingInsuarances");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BuildingInsuaranceData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DataId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("BuildingInsuaranceDatas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaAbhiperana", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double?>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("Month")
                        .HasColumnType("longtext");

                    b.HasKey("DataId");

                    b.HasIndex("BranchId");

                    b.ToTable("DivisaranaAbhiperanas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaCircleDate", b =>
                {
                    b.Property<int>("CircleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CircleId"));

                    b.Property<double>("AddmissionFee")
                        .HasColumnType("double");

                    b.Property<string>("BranchId")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("DueAmount")
                        .HasColumnType("double");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("NextExecuteDate")
                        .HasColumnType("date");

                    b.Property<double>("RecoveryAmount")
                        .HasColumnType("double");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("double");

                    b.HasKey("CircleId");

                    b.HasIndex("CustomerPolicyNo");

                    b.ToTable("DivisaranaCircleDates");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaCompensation", b =>
                {
                    b.Property<int>("CompensationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CompensationId"));

                    b.Property<string>("BranchId")
                        .HasColumnType("longtext");

                    b.Property<double?>("CompensationValue")
                        .HasColumnType("double");

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("DeathDate")
                        .HasColumnType("date");

                    b.Property<string>("DeathPersonName")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DischargeDate")
                        .HasColumnType("date");

                    b.Property<string>("Diseases")
                        .HasColumnType("longtext");

                    b.Property<string>("DivisaranaNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Hospital")
                        .HasColumnType("longtext");

                    b.Property<string>("HospitalizedPerson")
                        .HasColumnType("longtext");

                    b.Property<string>("MemberName")
                        .HasColumnType("longtext");

                    b.Property<string>("Realtion")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("Surgery")
                        .HasColumnType("longtext");

                    b.HasKey("CompensationId");

                    b.HasIndex("CustomerPolicyNo");

                    b.ToTable("DivisaranaCompensations");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaData", b =>
                {
                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("BankMemberNo")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<string>("ID")
                        .HasColumnType("longtext");

                    b.Property<string>("Job")
                        .HasColumnType("longtext");

                    b.Property<string>("Succssor")
                        .HasColumnType("longtext");

                    b.HasKey("CustomerPolicyNo");

                    b.ToTable("DivisaranaDatas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaParithoshitha", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double?>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("MemberNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("DataId");

                    b.HasIndex("BranchId");

                    b.ToTable("DivisaranaParithoshithas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("BranchId")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<double?>("PaymentValue")
                        .HasColumnType("double");

                    b.Property<double?>("RunningBalance")
                        .HasColumnType("double");

                    b.Property<DateOnly>("SystemDate")
                        .HasColumnType("date");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerPolicyNo");

                    b.ToTable("DivisaranaPayments");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaSuccssor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Relationship")
                        .HasColumnType("longtext");

                    b.Property<string>("SuccsorName")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("SuccssorDob")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPolicyNo");

                    b.ToTable("DivisaranaSuccssors");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPolicyNo");

                    b.HasIndex("InsuranceId");

                    b.ToTable("DivisaranaTbls");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.HealthInsuarance", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("PolicyNo");

                    b.HasIndex("InsuranceId");

                    b.ToTable("HealthInsuarances");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.HealthInsuaranceData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DataId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("HealthInsuaranceDatas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.HealthInsuranceCompenstaion", b =>
                {
                    b.Property<int>("HealthInsuranceCompenstaionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("HealthInsuranceCompenstaionID"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("HealthInsuranceCompenstaionID");

                    b.HasIndex("PolicyNo");

                    b.ToTable("HealthInsuranceCompenstaions");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Insuarance", b =>
                {
                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceProductID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("longtext");

                    b.Property<string>("StartDate")
                        .HasColumnType("longtext");

                    b.HasKey("InsuranceId");

                    b.HasIndex("BranchId");

                    b.HasIndex("InsuranceProductID");

                    b.ToTable("Insuarances");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.InsuranceProduct", b =>
                {
                    b.Property<string>("InsuranceProductID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceProductName")
                        .HasColumnType("longtext");

                    b.HasKey("InsuranceProductID");

                    b.ToTable("InsuranceProducts");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanCompenstaion", b =>
                {
                    b.Property<int>("LoanCompenstaionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LoanCompenstaionID"));

                    b.Property<string>("BranchId")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<double>("CompenstaionValue")
                        .HasColumnType("double");

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Requirement")
                        .HasColumnType("longtext");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("LoanCompenstaionID");

                    b.HasIndex("CustomerPolicyNo");

                    b.ToTable("LoanCompenstaions");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanCustomer", b =>
                {
                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("ID")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("LoanEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("LoanIssueDate")
                        .HasColumnType("date");

                    b.Property<double>("LoanValue")
                        .HasColumnType("double");

                    b.Property<string>("ProjectName")
                        .HasColumnType("longtext");

                    b.Property<string>("TeamNo")
                        .HasColumnType("longtext");

                    b.HasKey("CustomerPolicyNo");

                    b.ToTable("LoanCustomers");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<double>("Paymentvalue")
                        .HasColumnType("double");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerPolicyNo");

                    b.ToTable("LoanPayments");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerPolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPolicyNo");

                    b.HasIndex("InsuranceId");

                    b.ToTable("LoanTbls");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingRelief", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("PolicyNo");

                    b.HasIndex("InsuranceId")
                        .IsUnique();

                    b.ToTable("SavingReliefs");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingReliefCompensation", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<double>("CompensationValue")
                        .HasColumnType("double");

                    b.Property<string>("DeathpersonName")
                        .HasColumnType("longtext");

                    b.Property<string>("MemberAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("MemberName")
                        .HasColumnType("longtext");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Realtion")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("ReasonDate")
                        .HasColumnType("date");

                    b.Property<double>("RemainingBalanece")
                        .HasColumnType("double");

                    b.Property<string>("Schoolname")
                        .HasColumnType("longtext");

                    b.Property<string>("Studentname")
                        .HasColumnType("longtext");

                    b.Property<string>("Universityname")
                        .HasColumnType("longtext");

                    b.HasKey("MemberId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("SavingReliefCompensations");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingReliefData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DataId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("SavingReliefDatas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingReliefParithoshitha", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double?>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("BranchId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("MemberNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("DataId");

                    b.HasIndex("BranchId");

                    b.ToTable("SavingReliefParithoshithas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Treasuary", b =>
                {
                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InsuranceId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("PolicyNo");

                    b.HasIndex("InsuranceId");

                    b.ToTable("Treasuaries");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.TreasuaryData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DataId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.HasKey("DataId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("TreasuaryDatas");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.TreasuaryesCollection", b =>
                {
                    b.Property<int>("TreasuaryeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TreasuaryeId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TreasuaryName")
                        .HasColumnType("longtext");

                    b.HasKey("TreasuaryeId");

                    b.HasIndex("PolicyNo");

                    b.ToTable("TreasuaryesCollections");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.TreasuraryInsuranceCompenstaion", b =>
                {
                    b.Property<int>("TreasuraryInsuranceCompenstaionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TreasuraryInsuranceCompenstaionID"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNo")
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("TreasuraryInsuranceCompenstaionID");

                    b.HasIndex("PolicyNo");

                    b.ToTable("TreasuraryInsuranceCompenstaions");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Zone", b =>
                {
                    b.Property<string>("ZoneId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Zone_name")
                        .HasColumnType("longtext");

                    b.HasKey("ZoneId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Bank_Insuarance.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NicNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Profession")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BankingInsuarance", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Insuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BankingInsuaranceCompenstaion", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.BankingInsuarance", "BankingInsuarance")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("BankingInsuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BankingInsuaranceData", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.BankingInsuarance", "BankingInsuarance")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("BankingInsuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Branch", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BuildiingInsuranceCompenstaion", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.BuildingInsuarance", "BuildingInsuarance")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("BuildingInsuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BuildingInsuarance", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Insuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.BuildingInsuaranceData", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.BuildingInsuarance", "BuildingInsuarance")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("BuildingInsuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaAbhiperana", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaCircleDate", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.DivisaranaData", "DivisaranaData")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.Navigation("DivisaranaData");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaCompensation", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.DivisaranaData", "DivisaranaData")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.Navigation("DivisaranaData");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaParithoshitha", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaPayment", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.DivisaranaData", "DivisaranaData")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.Navigation("DivisaranaData");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaSuccssor", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.DivisaranaData", "DivisaranaData")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.Navigation("DivisaranaData");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.DivisaranaTbl", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.DivisaranaData", "DivisaranaData")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.Navigation("DivisaranaData");

                    b.Navigation("Insuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.HealthInsuarance", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Insuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.HealthInsuaranceData", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.HealthInsuarance", "HealthInsuarance")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("HealthInsuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.HealthInsuranceCompenstaion", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.HealthInsuarance", "HealthInsuarance")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("HealthInsuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Insuarance", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Branch", "branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Bank_Insuarance.Models.InsuranceProduct", "insuranceProduct")
                        .WithMany()
                        .HasForeignKey("InsuranceProductID");

                    b.Navigation("branch");

                    b.Navigation("insuranceProduct");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanCompenstaion", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.LoanCustomer", "LoanCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.Navigation("LoanCustomer");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanPayment", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.LoanCustomer", "LoanCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.Navigation("LoanCustomer");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.LoanTbl", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.LoanCustomer", "LoanCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerPolicyNo");

                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Insuarance");

                    b.Navigation("LoanCustomer");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingRelief", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithOne("savingRelief")
                        .HasForeignKey("Bank_Insuarance.Models.SavingRelief", "InsuranceId");

                    b.Navigation("Insuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingReliefCompensation", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.SavingRelief", "SavingRelief")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("SavingRelief");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingReliefData", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.SavingRelief", "SavingRelief")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("SavingRelief");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.SavingReliefParithoshitha", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Treasuary", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Insuarance", "Insuarance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Insuarance");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.TreasuaryData", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Treasuary", "Treasuary")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("Treasuary");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.TreasuaryesCollection", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Treasuary", "Treasuary")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("Treasuary");
                });

            modelBuilder.Entity("Bank_Insuarance.Models.TreasuraryInsuranceCompenstaion", b =>
                {
                    b.HasOne("Bank_Insuarance.Models.Treasuary", "Treasuary")
                        .WithMany()
                        .HasForeignKey("PolicyNo");

                    b.Navigation("Treasuary");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bank_Insuarance.Models.Insuarance", b =>
                {
                    b.Navigation("savingRelief")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
