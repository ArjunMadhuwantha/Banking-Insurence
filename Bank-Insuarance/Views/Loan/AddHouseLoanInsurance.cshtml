@using Bank_Insurance.ViewModel
@using Microsoft.AspNetCore.Identity
@model LoanViewModel
@{
    ViewData["Title"] = "Add House-Loan Insuarance Payment";
}

<head>

    <link rel="stylesheet" href="~/css/LoanInsuranceStyle.css">
    <link rel="stylesheet" href="~/css/PopUpStyle.css">
    
    <script src="~/js/TextFeildFocus.js"></script>
    <title>Home Loan Insurance</title>
</head>
<body>
    <div class="MainDiv">

        <div class="frame" id="Home">
            <div class="NavBarTop_div">
                <a class="Back" asp-controller="Home" asp-action="Index"><img class="logo_img_Home" src="~/images/Homelogo.png"></a>
                <label class="Topic">Home Loan Insurance</label>

            </div>


            <div class="content_div">
                <div class="navigation" id="Leftnav">
                    <ul class="LeftUl">

                        <li class="LeftLi">
                            <a asp-controller="Loan" asp-action="LoanHome" class="active" id="">
                                <img src="~/images/Back.png" class="Back_png">Back
                            </a>
                        </li>

                    </ul>
                </div>

                <div class="type_div">



                    <div class="content_div2">
                        <form asp-controller="Loan" asp-action="AddHouseLoanInsurance" method="post">
                            <div class="V_div01">

                                <div class="V_div">
                                    <label class="Branch_lbl">Branch</label>
                                    <input class="Branch_txt textbox" type="text" id="branchInput" required>
                                    <input type="hidden" id="branchId" name="BranchId">
                                </div>

                                <div class="V_div">
                                    <label class="Name_lbl">Name</label>
                                    <input asp-for="Name" class="Name_txt textbox" type="text" required oninput="validateInputStrings(event)">
                                </div>

                                <div class="V_div">
                                    <label class="ID_lbl">ID</label>
                                    <input asp-for="ID" class="ID_txt textbox" type="text" required oninput="validateInputID(event)">
                                </div>

                                <div class="V_div">
                                    <label class="Address_lbl">Address</label>
                                    <input asp-for="Address" class="Address_txt textbox" type="text" oninput="validateInputAddress(event)">
                                </div>

                                <div class="V_div">
                                    <label class="Name_lbl">Project Name</label>

                                    <select  name="ProjectName" id="Project" class="ProjectDropdown textbox">
                                        
                                        <option value="Home Loan" id="" selected>Home Loan</option>
                                        <option value="" disabled></option>
                                    </select>
                                </div>

                                <div class="V_div">
                                    <label class="Name_lbl">New Project Name</label>
                                    <input asp-for ="ProjectName" class="Name_txt textbox" type="text">
                                </div>

                                <div class="V_div">
                                    <label class="Date_lbl">Loan Start Date</label>
                                    <input asp-for="LoanIssueDate" class="Date_txt textbox" type="date" id="date" required>
                                </div>

                                <div class="V_div">
                                    <label class="Date_lbl">Loan End Date</label>
                                    <input asp-for="LoanEndDate" class="Date_txt textbox" type="date" id="end-date" required>
                                </div>



                                <div class="V_div">
                                    <label class="Value_lbl">Loan Value</label>
                                    <input class="Value_txt textbox" asp-for="LoanValue" type="number" min="0" oninput="validity.valid||(value='');" required>
                                </div>

                                <div class="V_div">
                                    <label class="Date_lbl">Payment Date</label>
                                    <input asp-for="Paymentdate" class="Date_txt textbox" type="date" id="payment-date" required>
                                </div>


                                <div class="V_div">
                                    <label class="Value_lbl">Payment</label>
                                    <input asp-for="Payment" class="Value_txt textbox" type="number" min="0" oninput="validity.valid||(value='');" required>
                                </div>

                                <div class="V_div">
                                    <label class="FormNumber_lbl">Team Number</label>
                                    <input asp-for="TeamNo" class="FormNumber_txt textbox" type="text" required oninput="validateInputStringsNumbers(event)">
                                </div>

                                <span id="date-error" class="error-message">Loan End Date must be greater than Loan Start Date.<br /> Payment Date must be between Loan Start Date and Loan End Date.</span>

                            </div>

                            <div class="button_div">
                                <div class="Add_div"><button type="button" class="Add" id="saveButton">Add</button></div>

                            </div>
                            <div id="confirmationModal" class="modal">
                                <div class="modal-content">
                                    
                                    <p>Are you sure you want to Add?</p>
                                    <button class="PopUpYes" type="submit" id="confirmSave">Yes</button>
                                    <button class="PopUpNo" type="button" id="cancelSave">No</button>
                                </div>
                            </div>
                        </form>

                        


                    </div>
                   
                </div>
            </div>

        </div>

    </div>
</body>
<script>
    document.getElementById("saveButton").addEventListener("click", function () {
        document.getElementById("confirmationModal").style.display = "block";
    });

    document.getElementById("cancelSave").addEventListener("click", function () {
        document.getElementById("confirmationModal").style.display = "none";
    });

    document.getElementById("confirmSave").addEventListener("click", function () {
        
        document.getElementById("confirmationModal").style.display = "none";
    });

    // Set the max attribute to today's date
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('date').setAttribute('max', today);

    function validateInputStrings(event) {
        const regex = /^[a-zA-Z\s.]*$/;
        const input = event.target.value;
        if (!regex.test(input)) {
            event.target.value = input.slice(0, -1);
        }
    }
    function validateInputID(event) {
        const regex = /^[0-9Vv]*$/;
        const input = event.target.value;
        if (!regex.test(input)) {
            event.target.value = input.slice(0, -1);
        }
    }
    function validateInputAddress(event) {
        const regex = /^[0-9a-zA-Z\/,\.]*$/;
        const input = event.target.value;
        if (!regex.test(input)) {
            event.target.value = input.slice(0, -1);
        }
    }
    function validateInputStringsNumbers(event) {
        const regex = /^[0-9a-zA-Z\s]*$/;
        const input = event.target.value;
        if (!regex.test(input)) {
            event.target.value = input.slice(0, -1);
        }
    }

    function validateDates() {
        const startDateInput = document.getElementById('date');
        const endDateInput = document.getElementById('end-date');
        const paymentDateInput = document.getElementById('payment-date');
        const errorMessage = document.getElementById('date-error');

        const startDate = new Date(startDateInput.value);
        const endDate = new Date(endDateInput.value);
        const paymentDate = new Date(paymentDateInput.value);

        if (endDate <= startDate) {
            errorMessage.style.display = 'inline';
            endDateInput.classList.add('invalid');
            return;
        } else {
            endDateInput.classList.remove('invalid');
        }

        if (paymentDate <= startDate || paymentDate >= endDate) {
            errorMessage.style.display = 'inline';
            paymentDateInput.classList.add('invalid');
        } else {
            errorMessage.style.display = 'none';
            paymentDateInput.classList.remove('invalid');
        }
    }

    document.getElementById('date').addEventListener('input', function () {
        const startDateInput = document.getElementById('date');
        const endDateInput = document.getElementById('end-date');
        const paymentDateInput = document.getElementById('payment-date');
        endDateInput.min = startDateInput.value;
        paymentDateInput.min = startDateInput.value;
        validateDates();
    });

    document.getElementById('end-date').addEventListener('input', function () {
        const endDateInput = document.getElementById('end-date');
        const paymentDateInput = document.getElementById('payment-date');
        paymentDateInput.max = endDateInput.value;
        validateDates();
    });

    document.getElementById('payment-date').addEventListener('input', validateDates);
</script>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        $(document).ready(function () {
            
            var branches = @Html.Raw(Json.Serialize(ViewBag.Branchs));

            
            var branchNamesWithoutDots = branches.map(function (branch) {
                return branch.text.replace('.', ''); 
            });

            
            $("#branchInput").autocomplete({
                source: branchNamesWithoutDots, 
                minLength: 1, 
                messages: {
                    noResults: '',
                    results: function () { }
                },
                select: function (event, ui) {
                    
                    var selectedBranch = branches.find(function (b) { return b.text === ui.item.value; });

                    
                    $("#branchId").val(selectedBranch.value);

                    return true; 
                }
            }).autocomplete("instance")._renderMenu = function (ul, items) {
                var that = this;
                $.each(items, function (index, item) {
                    that._renderItemData(ul, item);
                });
            };
        });
    </script>
}
